[{"content":"Installation of prometheus.\nInstall prometheus Tested on minikube.\n1 2 3 4 5 6 7 8 9 helm repo add prometheus-community https://prometheus-community.github.io/helm-charts helm repo update kubectl create namespace monitoring helm install prometheus prometheus-community/prometheus \\ --namespace monitoring \\ --set alertmanager.persistentVolume.storageClass=\u0026#34;standard\u0026#34; \\ --set server.persistentVolume.storageClass=\u0026#34;standard\u0026#34; ","date":"2022-09-24T14:30:36-03:00","permalink":"https://edwardspc.github.io/blog/p/prometheus/","title":"Prometheus"},{"content":"Installation of heml.\nInstallation 1 2 3 curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 chmod 700 get_helm.sh ./get_helm.sh Reference https://helm.sh/docs/intro/install ","date":"2022-09-24T14:25:17-03:00","permalink":"https://edwardspc.github.io/blog/p/helm/","title":"Helm"},{"content":"A quickstart to deploy minikube.\nTested on september 2022 Install cri-tools 1 sudo apt install cri-tools -y Install cri-docker 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 sudo apt install -y apt-transport-https curl software-properties-common sudo apt install -y conntrack socat ebtables ethtool sudo apt install -y docker.io sudo usermod -aG docker $USER crio https://www.mirantis.com/blog/how-to-install-cri-dockerd-and-migrate-nodes-from-dockershim https://github.com/Mirantis/cri-dockerd#build-and-install wget https://github.com/Mirantis/cri-dockerd/releases/download/v0.2.0/cri-dockerd-v0.2.0-linux-amd64.tar.gz tar xvf cri-dockerd-v0.2.0-linux-amd64.tar.gz sudo mv ./cri-dockerd /usr/local/bin/ wget https://raw.githubusercontent.com/Mirantis/cri-dockerd/master/packaging/systemd/cri-docker.service wget https://raw.githubusercontent.com/Mirantis/cri-dockerd/master/packaging/systemd/cri-docker.socket sudo mv cri-docker.socket cri-docker.service /etc/systemd/system/ sudo sed -i -e \u0026#39;s,/usr/bin/cri-dockerd,/usr/local/bin/cri-dockerd,\u0026#39; /etc/systemd/system/cri-docker.service sudo systemctl daemon-reload sudo systemctl enable --now cri-docker.socket sudo systemctl status cri-docker.socket sudo systemctl daemon-reload Install minikube 1 2 3 curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64 sudo install minikube-linux-amd64 /usr/local/bin/minikube rm -f minikube-linux-amd64 Install kubectl 1 2 3 4 VERSION=`curl --insecure -s https://storage.googleapis.com/kubernetes-release/release/stable.txt` curl --insecure -LO https://storage.googleapis.com/kubernetes-release/release/$VERSION/bin/linux/amd64/kubectl chmod +x kubectl sudo mv kubectl /usr/local/bin/ Start minikube 1 2 3 4 5 VERSION=$(minikube config defaults kubernetes-version|head -n1|awk \u0026#39;{print $2}\u0026#39;) VERSION=${VERSION:1} # consider add sudo minikube start --kubernetes-version=$VERSION --driver=none --logtostderr -v 10 Troubleshooting Installing latest version requires sudo and copy configuration file, check below.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 edward@master:~$ minikube start --kubernetes-version=$VERSION --driver=none --logtostderr -v 10 I1002 07:23:09.053414 13100 out.go:296] Setting OutFile to fd 1 ... I1002 07:23:09.053446 13100 out.go:343] TERM=xterm,COLORTERM=, which probably does not support color I1002 07:23:09.053448 13100 out.go:309] Setting ErrFile to fd 2... I1002 07:23:09.053479 13100 out.go:343] TERM=xterm,COLORTERM=, which probably does not support color I1002 07:23:09.053556 13100 root.go:333] Updating PATH: /home/edward/.minikube/bin W1002 07:23:09.053627 13100 root.go:310] Error reading config file at /home/edward/.minikube/config/config.json: open /home/edward/.minikube/config/config.json: no such file or directory I1002 07:23:09.053851 13100 out.go:303] Setting JSON to false I1002 07:23:09.054723 13100 start.go:115] hostinfo: {\u0026#34;hostname\u0026#34;:\u0026#34;master\u0026#34;,\u0026#34;uptime\u0026#34;:3042,\u0026#34;bootTime\u0026#34;:1664703148,\u0026#34;procs\u0026#34;:225,\u0026#34;os\u0026#34;:\u0026#34;linux\u0026#34;,\u0026#34;platform\u0026#34;:\u0026#34;ubuntu\u0026#34;,\u0026#34;platformFamily\u0026#34;:\u0026#34;debian\u0026#34;,\u0026#34;platformVersion\u0026#34;:\u0026#34;20.04\u0026#34;,\u0026#34;kernelVersion\u0026#34;:\u0026#34;5.15.0-48-generic\u0026#34;,\u0026#34;kernelArch\u0026#34;:\u0026#34;x86_64\u0026#34;,\u0026#34;virtualizationSystem\u0026#34;:\u0026#34;kvm\u0026#34;,\u0026#34;virtualizationRole\u0026#34;:\u0026#34;host\u0026#34;,\u0026#34;hostId\u0026#34;:\u0026#34;350420e7-60d1-4f75-bf66-861f6a5fcb1d\u0026#34;} I1002 07:23:09.054780 13100 start.go:125] virtualization: kvm host I1002 07:23:09.055000 13100 out.go:177] * minikube v1.27.0 on Ubuntu 20.04 * minikube v1.27.0 on Ubuntu 20.04 W1002 07:23:09.055073 13100 preload.go:295] Failed to list preload files: open /home/edward/.minikube/cache/preloaded-tarball: no such file or directory I1002 07:23:09.055210 13100 notify.go:214] Checking for updates... W1002 07:23:09.055251 13100 out.go:239] ! Kubernetes 1.25.0 has a known issue with resolv.conf. minikube is using a workaround that should work for most use cases. ! Kubernetes 1.25.0 has a known issue with resolv.conf. minikube is using a workaround that should work for most use cases. W1002 07:23:09.055302 13100 out.go:239] ! For more information, see: https://github.com/kubernetes/kubernetes/issues/112135 ! For more information, see: https://github.com/kubernetes/kubernetes/issues/112135 I1002 07:23:09.055314 13100 driver.go:365] Setting default libvirt URI to qemu:///system I1002 07:23:09.058236 13100 out.go:177] * Using the none driver based on user configuration * Using the none driver based on user configuration I1002 07:23:09.058254 13100 start.go:284] selected driver: none I1002 07:23:09.058260 13100 start.go:808] validating driver \u0026#34;none\u0026#34; against \u0026lt;nil\u0026gt; I1002 07:23:09.058270 13100 start.go:819] status for none: {Installed:false Healthy:false Running:false NeedsImprovement:false Error:running the \u0026#39;none\u0026#39; driver as a regular user requires sudo permissions Reason: Fix: Doc: Version:} I1002 07:23:09.058381 13100 out.go:177] W1002 07:23:09.058415 13100 out.go:239] * Exiting due to PROVIDER_NONE_NOT_FOUND: The \u0026#39;none\u0026#39; provider was not found: running the \u0026#39;none\u0026#39; driver as a regular user requires sudo permissions * Exiting due to PROVIDER_NONE_NOT_FOUND: The \u0026#39;none\u0026#39; provider was not found: running the \u0026#39;none\u0026#39; driver as a regular user requires sudo permissions I1002 07:23:09.058423 13100 out.go:177] 1 2 3 mkdir -p $HOME/.kube sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config sudo chown $(id -u):$(id -g) $HOME/.kube/config ","date":"2022-09-16T00:57:00-03:00","permalink":"https://edwardspc.github.io/blog/p/kubernetes/","title":"Kubernetes"},{"content":"Comments about cri-o.\nA quickstart to deploy cri-o 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 # Load modules cat \u0026lt;\u0026lt;EOF | sudo tee /etc/modules-load.d/crio.conf overlay br_netfilter EOF sudo modprobe overlay sudo modprobe br_netfilter # installation export OS=xUbuntu_20.04 export VERSION=1.21 cat \u0026lt;\u0026lt;EOF | sudo tee /etc/apt/sources.list.d/devel:kubic:libcontainers:stable.list deb https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/$OS/ / EOF cat \u0026lt;\u0026lt;EOF | sudo tee /etc/apt/sources.list.d/devel:kubic:libcontainers:stable:cri-o:$VERSION.list deb https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable:/cri-o:/$VERSION/$OS/ / EOF curl -L https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_20.04/Release.key | sudo apt-key add - curl -L https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable:/cri-o:/1.21/xUbuntu_20.04/Release.key | sudo apt-key add - sudo apt update sudo apt install cri-o cri-o-runc sudo apt install cri-tools -y sudo systemctl enable crio sudo systemctl start crio # test sudo crictl ps sudo crictl images ","date":"2022-09-10T23:03:36-03:00","permalink":"https://edwardspc.github.io/blog/p/cri-o/","title":"CRI-O"},{"content":"Comments about qemu-kvm.\nA script to run kvm-based Ubuntu VMs 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 #!/bin/bash HOME=\u0026#34;/opt/public/virtualpc\u0026#34; DIR_TEMPLATES=$HOME/templates IMG_TEMPLATE=\u0026#34;ubuntu-20.04-server-cloudimg-amd64.img\u0026#34; VM_NAME=\u0026#34;master\u0026#34; VM_DIR=$HOME/$VM_NAME mkdir -p $VM_DIR qemu-img create -F qcow2 -b $DIR_TEMPLATES/$IMG_TEMPLATE -f qcow2 $VM_DIR/$VM_NAME.qcow2 10G export MAC_ADDR=$(printf \u0026#39;52:54:00:%02x:%02x:%02x\u0026#39; $((RANDOM%256)) $((RANDOM%256)) $((RANDOM%256))) echo $MAC_ADDR export INTERFACE=eth01 export IP_ADDR=192.168.122.102 cat \u0026gt; $VM_DIR/network-config \u0026lt;\u0026lt;EOF ethernets: $INTERFACE: addresses: - $IP_ADDR/24 dhcp4: false gateway4: 192.168.122.1 match: macaddress: $MAC_ADDR nameservers: addresses: - 1.1.1.1 - 8.8.8.8 set-name: $INTERFACE version: 2 EOF cat \u0026gt; $VM_DIR/user-data \u0026lt;\u0026lt;EOF #cloud-config hostname: $VM_NAME manage_etc_hosts: true users: - name: edward sudo: ALL=(ALL) NOPASSWD:ALL groups: users, admin home: /home/edward shell: /bin/bash lock_passwd: false ssh_pwauth: true disable_root: false chpasswd: list: | edward:changeme expire: false EOF touch $VM_DIR/meta-data cloud-localds -v --network-config=$VM_DIR/network-config $VM_DIR/$VM_NAME-seed.qcow2 $VM_DIR/user-data $VM_DIR/meta-data virt-install \\ --connect qemu:///system \\ --virt-type kvm --name $VM_NAME \\ --ram 2048 \\ --vcpus=2 \\ --os-type linux \\ --os-variant ubuntu20.04 \\ --disk path=$VM_DIR/$VM_NAME.qcow2,device=disk \\ --disk path=$VM_DIR/$VM_NAME-seed.qcow2,device=disk \\ --import --network network=default,model=virtio,mac=$MAC_ADDR References Cloud Images ","date":"2022-09-03T19:14:12-03:00","permalink":"https://edwardspc.github.io/blog/p/qemu/kvm/","title":"QEMU/KVM"},{"content":"To disable ipv6:\nEdit kernel parameters (sysctl) 1 2 3 4 5 6 cat \u0026lt;\u0026lt;EOF | sudo tee /etc/sysctl.conf net.ipv4.ip_forward=1 net.ipv6.conf.all.disable_ipv6=1 net.ipv6.conf.default.disable_ipv6=1 net.ipv6.conf.lo.disable_ipv6=1 EOF Reload 1 sudo sysctl -p ","date":"2022-08-08T06:43:43-03:00","permalink":"https://edwardspc.github.io/blog/p/disable-ipv6/","title":"Disable ipv6"},{"content":"Quickstart to configure ubuntu server\nNetworking 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 cat \u0026lt;\u0026lt;EOF | sudo tee /etc/netplan/00-installer-config.yaml network: version: 2 renderer: networkd ethernets: enp0s3: addresses: - 10.0.2.10/24 dhcp4: false gateway4: 10.0.2.1 match: macaddress: 08:00:27:3d:a5:b7 nameservers: addresses: - 8.8.8.8 - 8.8.4.4 routes: - to: 0.0.0.0/24 via: 10.0.2.1 set-name: enp0s3 EOF Restart network 1 sudo systemctl restart systemd-networkd ","date":"2022-08-08T05:57:11-03:00","permalink":"https://edwardspc.github.io/blog/p/ubuntu-server/","title":"Ubuntu Server"},{"content":"Notes to work with WSL\nTo browse WSL file system: open explorer \\\\wsl$ ","date":"2022-08-01T20:17:52-03:00","permalink":"https://edwardspc.github.io/blog/p/wsl2/","title":"WSL2"}]